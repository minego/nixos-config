" set searchengine duckduckgo
set searchengine google

set allowautofocus false
set incsearch true
set editorcmd kitty -e nvim

" " Binds

" tridactyl gets J and K backwards... I'm used to qutebrowser's direction
bind K tabprev
bind J tabnext

" New tabs go at the end of the tab list
set tabopenpos last
set tabclosepinned false

" make d take you to the left (I find it much less confusing)
bind d composite tabprev; tabclose #
bind D tabclose

" Ctrl-F should use the browser's native 'find' functionality.
unbind <C-f>

" Make <C-v> enter ignore like it does in qutebrowser, the default <S-Escape>
" to get out also works
unbind <C-v>
bind <C-v> mode ignore

" But also support Tridactyl search too.
# bind / fillcmdline find
# bind ? fillcmdline find -?
bind n findnext
bind N findnext --reverse

" Allow Ctrl-a to select all in the commandline
unbind --mode=ex <C-a>

" Allow Ctrl-c to copy in the commandline
unbind --mode=ex <C-c>

" " Handy multiwindow/multitasking binds
" bind gd tabdetach
" bind gD composite tabduplicate; tabdetach
" 
" " Sane hinting mode
" set hintfiltermode vimperator-reflow
" set hintnames numeric
" 
" " Add helper commands that Mozillians think make Firefox irredeemably
" " insecure. For details, read the comment at the top of this file.
" command fixamo_quiet jsb tri.excmds.setpref("privacy.resistFingerprinting.block_mozAddonManager", "true").then(tri.excmds.setpref("extensions.webextensions.restrictedDomains", '""'))
" command fixamo js tri.excmds.setpref("privacy.resistFingerprinting.block_mozAddonManager", "true").then(tri.excmds.setpref("extensions.webextensions.restrictedDomains", '""').then(tri.excmds.fillcmdline_tmp(3000, "Permissions added to user.js. Please restart Firefox to make them take affect.")))
" 
" " Make Tridactyl work on more sites at the expense of some security.
" " For details, read the comment at the top of this file.
" fixamo_quiet

" The following modification allows Tridactyl to function on more pages, e.g. raw GitHub pages.
" You may not wish to run this. Mozilla strongly feels that you shouldn't.
" Read https://wiki.mozilla.org/Security/CSP#Goals for more information.

" Equivalent to `set csp clobber` before it was removed.
" This weakens your defences against cross-site-scripting attacks
" and other types of code-injection by reducing the strictness 
" of Content Security Policy on all sites in a couple of ways.

" We remove the sandbox directive
" https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/sandbox
" which allows our iframe (and anyone else's) to run on any website.

" We weaken the style-src directive
" https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src
" to allow us to theme our elements.
" This exposes you to 'cross site styling' attacks
jsb browser.webRequest.onHeadersReceived.addListener(tri.request.clobberCSP,{urls:["<all_urls>"],types:["main_frame"]},["blocking","responseHeaders"])

" Fix UI stuff - Don't cover the input area
guiset_quiet hoverlink		top-right
guiset_quiet statuspanel	top-right

